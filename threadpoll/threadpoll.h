#ifndef _THREADPOLL_H
#define _THREADPOLL_H

typedef struct ThreadPool ThreadPool;
typedef struct Args {
    ThreadPool* pool;
    void(*func)(void*);
    void* num;
}Args;
//创建线程池并初始化

ThreadPool* threadPoolCreate(int min,int max,int queueSize);

//销毁线程池
int threadPoolDestroy(ThreadPool* pool);

//给线程池添加任务
void threadPoolAdd(void * arg);

//获取线程池中工作的线程的个数
int threadPoolBusyNum(ThreadPool* pool);

//获取线程池中活着的线程的个数
int threadPoolAliveNum(ThreadPool* pool);




//////////////////////////
void* worker(void* arg);

void* manager(void* arg);

void threadExit(ThreadPool* pool);


#endif // !_THREADPOLL_H

